#+Title: July 20 week report
#+Author: Wuhao Wei

* Work done:


** Cameras
press v to switch cameras

*** auto follow camera

*** controllable follow camera
  operation instructions:
   1. use > or < key to change the dist between the spider and the camera
   2. use w/a/s/d to rotate

*** world camera
There are two kinds of world cameras.
1. First one is just operating the cameras. 
2. Second one is cast a ray from the camera to gameobjects.
The difference is the rotating operations:
1. the first one rotates the camera itself
2. the second one rotates the camera around the ray hit point. 
Cons&pros:
1. The first one is hard to operate.
2. The second one is easy to operate. Besides, I could shoot food or bombs towards the hit point. 
   However, the ray must hit at least one objects. And one problem here is how to deal with the condition that the ray hit nothing.
operation instructions:
1. 1,2,3,4 to reset the camera position and orientation
2. w/s/a/d to rotate
3. > or < to change the dist between hit point and camera
4. arrow keys to change the position of the camera

Additionally, in world camera state, press f to place a fly.

** add different behaviours
run towards after the spider sense a fly
** add simple UI 


* Report revision
have done some some revision. 
add footnote. need some suggestion on the permission part.
e.g. 
#+CAPTION: permission.
#+LABEL: mylabel
#+ATTR_LATEX: width=5cm
[[./img/permission_sample.png]]

#+CAPTION: bg_report.
#+LABEL: mylabel
#+ATTR_LATEX: width=5cm
[[./img/how_to_add.png]]




* Extra reading
1. read materials about Behaviour-based robotics
   subsumption architecture(most reading are slides and blogs)
2. Brooks, R. (1986). A robust layered control system for a mobile robot
3. Rodney Brooks’s paper on “Fast, Cheap, and Out of Control”


* Problems
1.  understand behaviour-based and subsumption architecture. 
    Still need some extra efforts on implementation
    (Since the robotics works differently. e.g. aims, difference between animation and
    robotics, hardware.).
    One big chanllenge here is how to implement parallel layers.(one possible solution 
    is to implement a schedule system with para priority)
    
2.  how to make the clips and movement consistent.
3.  similar to problem2. Direct control and indirect control.
    One way to control the spider is to manipulate:
    | target position  | velocity         | limb frequency |
    | target direction | angular velocity | limb turn      |
  
    The other way is 
    | target | transform | limb |

4.  action sequence
    

* Todo

1. revise the bg report(will mainly focus on chapter2 literature review)
2. add full details(e.g. turn around process. For the moment, cases are simplified. e.g. directly rotate the spider without process)
3. add new behaviours
4. refactor the main code(spider.cs see details in scratch) 
